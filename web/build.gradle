apply plugin: 'war'

dependencies {
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

    // https://mvnrepository.com/artifact/com.github.jknack/handlebars
    compile group: 'com.github.jknack', name: 'handlebars', version: '4.2.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile(project(":backend"))

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

}

war {
    archiveFileName = 'ROOT.war'
}


/**
 * Megadja a Tomcat URL alapot.
 * Pl. az alábbi beállítással a projekt context root-ja: http://localhost:8080/war-static-example/...
 * A "ROOT" értékkel a gyökérre deployolja a rendszer.
 */
def deploymentName = 'cars-web'

// beolvassuk környezeti változóból, hogy hova van telepítve a Tomcat
def tomcatHome = System.getenv('CATALINA_HOME')
logger.quiet("Tomcat home detected as '${tomcatHome}'")


// ezzel a taszkkal telepítjük ki a wart a Tomcatre
task deploy(type: Copy, dependsOn: 'war') {

    // futás előtt megnézzük, hogy a Tomcat home-ja helyesen be van-e állítva
    doFirst {
        if (!tomcatHome) {
            throw new InvalidUserDataException("Tomcat home (CATALINA_HOME) not set")
        }
    }

    // a "war" task kimenetét másoljuk
    from war.archiveFile

    // átnevezzük a war állományt a megfelelő contextRoot kialakításáért
    rename war.archiveFileName.get(), "${deploymentName}.war"

    // a másolás célpontja a Tomcat "webapps" almappája
    into "${tomcatHome}/webapps"
}


// Tomcat kitelepítés törlése
task undeploy(type: Delete) {

    // futás előtt megnézzük, hogy a Tomcat home-ja helyesen be van-e állítva
    doFirst {
        if (!tomcatHome) {
            throw new InvalidUserDataException("Tomcat home (CATALINA_HOME) not set")
        }
    }

    // töröljük a kitelepített war file-t
    delete "${tomcatHome}/webapps/${deploymentName}.war"
}